# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Go app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: "*"

env:
  RUN_PUSH_JOB: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
  IMAGE_NAME: siiliboard
  TAG_NAME: latest

jobs:

  build-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.4'

    - name: Build
      run: |
        go mod download
        go build -v -o ./siiliboard-linux-amd64 ./cmd

  build-docker:
    runs-on: ubuntu-latest
    needs: build-linux

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: |
        echo 'Push job status: ${{ env.RUN_PUSH_JOB }}'
        echo 'GITHUB_REF: ${{ github.ref_name }}'
        echo 'EVENT_NAME: ${{ github.event_name }}'
        docker build --tag ${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }} .

  push-docker:
    if: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build-docker
  
    steps:
    - uses: actions/checkout@v3
    - name: "Login to registry"
      run: docker login -u ${{ secrets.DOCKER_REGISTRY_USER }} -p ${{ secrets.DOCKER_REGISTRY_PW }} ${{ secrets.DOCKER_REGISTRY_URL }}
    
    - name: "Build image"
      run: docker build --tag ${{ secrets.DOCKER_REGISTRY_URL }}/${{ env.IMAGE_NAME}}:${{ env.TAG_NAME }} .

    - name: "Push docker image"
      run: docker push ${{ secrets.DOCKER_REGISTRY_URL }}/${{ env.IMAGE_NAME}}:${{ env.TAG_NAME }}
